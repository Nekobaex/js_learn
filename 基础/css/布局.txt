display: (形状, 修饰自身和内部)
  inline  限制比较大的值, 一般用于文本
  block   常用布局, 修饰自身
  flex    一维方向盒子, 修饰自身和子元素整体
  grid    二维方向盒子, 修饰自身和子元素整体

position: (位置)
  static    默认, 限制比较大
  absolute  常用, 相对父元素, 且不留空位
  relative  相对父元素, 留下空位
  fixed     相对于窗口定位, 不相对文档流
  sticky    相对于父元素定位, 若视图中父元素被遮盖, 则相对于文档流

边距:
  box-sizing: (盒模型)
    content-box
    border-box
  
  padding (内边距)
  margin  (外边距)
    margin: 1px;
    margin: 1px 2px;    // 上下, 左右
    margin: 1px 2px 3px 4px;  // 上, 右, 下, 左 (从上开始 顺时针)
    
    若某个值为 auto, 则margin 尽可能地填充该方向

    常用方法:
      左右居中: margin: 0px auto;

    使用限制:
      只能用于 position: static / relative,
      这样元素位于原文档流中的元素,

      而且能使用 margin 的地方, 
      top, left, ... 都会失效

文字对齐:
  左右对齐
  text-align: left / center / right

flex 布局:
  容器:
    position: flex;

grid 布局:
  容器:
    position: grid;

    grid-template-rows,
    grid-template-columns
      边距, 多个值由空格分开

      值的类型:
        px
        auto
        repeat()

    容器内, 项目整体在容器中的对齐方式
      justify-content: start | end | center | stretch | space-around | space-evenly | space-between;
      align-content: start | end | center | stretch | space-around | space-evenly | space-between;
      place-content   // 上面两者的缩写

    容器内, 项目的子元素的对齐方式:
      justify-items: start | end | center | stretch;  // 左右
      align-items: start | end | center | stretch;    // 上下
      place-items     // 上面两者的缩写

    